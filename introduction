//modren and scalable 
//google
//web & mobile
//pre requisites to learn flutter 
//cross plotforms


//optimisation : design beatiful and high performance
// cross platform
// Just in time (JIT) - production 

//easy to learn  -- >java,javascript #c
//static and dynamic typing 
//server side (Backend)-- dart frog and aqueduct

// Module-1
// what is dart?
// oop,c-style syntax
//Asynchorouns programming (refer) exp: mobile app, 
//sync- trail way ticket,Resturent order placing
//extensions and mixins
// function programming elements

// ----------flutter ------ dart web or angualr dart, BE, CLI Tools
//Module-2
//Basics of darts
//variables and data types 
// operators
//control flow - if-else, switch
//loops -for while do-while
// Module-3
//Functions and collections 1. defining functinos 2.names and optional parameters ,list and iterators , maps and sets
//Module-OOPS-4
//classes and objects, constuctors and named  constuctors 
//Inheritance and method overriding
//abstract classes and interfaces
//mixis and extenstions
//Module-5
//try and catch -finally blocks
//throwing exceptions
//understaing null safty
//Module-6
//Asynchonus - future and async and await . streams and event handling , isolates for concurrency

//Module-7 // packages ,libraries
//Module-8 - weba nd backend development, Creation of Rest API'S
//Module-9 - dart and flutter intro
//flutter roles in dart , basic widges, statemanagment , dart in flutter apps
//variables 
// void main(){
//   //explicit
//   int age = 45;
//   double price = 78.99;
//   String name = "Hello";
//   bool isActive = true;
  
//   //implicit 
//   var city = "hyd";
//   var lang = "eng";
  
//   dynamic data = "hello";
//     print(data);
//   print(age);
//   print(lang);
//   print(price);
//   print(city);
//   print(name);
//   print(isActive);
// }

//void - to return the function 
//main- top level function
//print- display text on the console

//data types:
//int -interger values,
//double- float values ,
//String- text values,
//bool-Boolen values (True/Flase),
//List (Collection of orderd elements),
//Map(Key-value pairs),
//Set(Unique Collection),
//dynamic(can hold any type of value)
//int and double - whole and decimal
// void main(){
//   //int & double
//  int x = 30;
//  double y = 56;
//   print(x);
//   print(y);
  
// }
//string
// void main(){
//   String name = "Hyderabad";
//   print(name);
// }
//Boolen
// void main(){
//    String name = "Hyderabad";
//   bool names = true;
//   print("Name is:$name,It's :$names");
 
  
// }

//
// void main(){
//   List<int> numbers = [12,14,15,16];
//   List<String> names = ["hyd","banglore","chennai"];
//   print("$numbers,$names");
// }

// void main(){
// //   List<int> numbers = [12,14,15,16];
//   List<String> names = ["hyd","banglore","chennai"];
//   names.remove("hyd");
//   print(names);
// }
//sets
// void main(){
//   Set<int> u_numbers = {1,2,3,4};
//   print(u_numbers);
// }
//map 
// void main(){
//   Map students = {
//     "name" :"shiva",
//    "age":"21"
//   };
//   print("$students['name'], $students['age']");
// }
//dynamic

// void main(){
//   dynamic name = "hello";
//   dynamic age = 45;
//   print(age);
// }



  
